// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20220321174554_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "e280570d-ef47-4ebe-9c67-89e59cf82f77",
                            Name = "Gaseosas"
                        },
                        new
                        {
                            Id = "c5c600c9-0bdd-424c-aafe-4484d9d48e98",
                            Name = "Almacen"
                        },
                        new
                        {
                            Id = "ced7cb99-4b4e-46ef-9dd6-351a5160dd05",
                            Name = "Golosinas"
                        },
                        new
                        {
                            Id = "8900a0ef-058e-4c54-9156-2277d42fb059",
                            Name = "Aguas Saborisadas"
                        },
                        new
                        {
                            Id = "0ff456ff-00c2-490f-8654-3770c8e32367",
                            Name = "Jugos"
                        },
                        new
                        {
                            Id = "edd4dd70-9fee-4f8e-b4c6-163794e05df8",
                            Name = "Vinos"
                        });
                });

            modelBuilder.Entity("Entities.InputOutput", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<decimal>("Count")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInput")
                        .HasColumnType("bit");

                    b.Property<string>("StorageId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("StorageId");

                    b.ToTable("InputsOutputs");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("Count")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Entities.Storage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PartianlCount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("WereHouseId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WereHouseId");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("Entities.WereHouse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("WereHouses");

                    b.HasData(
                        new
                        {
                            Id = "d22e20fb-369c-4e7c-8fee-30db14dbfb90",
                            Address = "Cordoba 880",
                            Name = "Casa Central"
                        },
                        new
                        {
                            Id = "42f366c8-0acf-44e5-8c59-b28ce34d8c8f",
                            Address = "Catamarca 1290",
                            Name = "Centro"
                        });
                });

            modelBuilder.Entity("Entities.InputOutput", b =>
                {
                    b.HasOne("Entities.Storage", "Storage")
                        .WithMany("InputsOutputs")
                        .HasForeignKey("StorageId");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.HasOne("Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Entities.Storage", b =>
                {
                    b.HasOne("Entities.Product", "Product")
                        .WithMany("Storages")
                        .HasForeignKey("ProductId");

                    b.HasOne("Entities.WereHouse", "WereHouse")
                        .WithMany("Storages")
                        .HasForeignKey("WereHouseId");
                });
#pragma warning restore 612, 618
        }
    }
}
